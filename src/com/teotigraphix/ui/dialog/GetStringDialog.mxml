<?xml version="1.0" encoding="utf-8"?>
<dialog:Dialog xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:dialog="com.teotigraphix.ui.dialog.*" 
               xmlns:f="library://ns.feathersui.com/mxml"
               content="{textInput}">
    
    <fx:Declarations>
        
        <f:TextInput id="textInput" 
                     styleName="{FrameworkStyleNames.TEXT_INPUT_DARK}"
                     change="textInput_changeHandler()">
            
            <f:layoutData>
                <f:VerticalLayoutData percentWidth="100"/>
            </f:layoutData>
            
        </f:TextInput>
        
    </fx:Declarations>
    
    <fx:Script>
        <![CDATA[
            import com.teotigraphix.ui.theme.framework.FrameworkStyleNames;
            
            import feathers.core.PopUpManager;
            
            private var _text:String;
            private var _prompt:String;
            private var _allowPromptAsText:Boolean;
            
            //----------------------------------
            // text
            //----------------------------------

            public function get text():String 
            {
                if (_allowPromptAsText && _text == null)
                {
                    return _prompt;
                }
                return _text;
            }
            
            public function set text(value:String):void
            {
                if (_text == value)
                    return;
                
                _text = value;
                invalidate(INVALIDATION_FLAG_DATA);
            }

            //----------------------------------
            // prompt
            //----------------------------------

            public function get prompt():String 
            {
                return _prompt;
            }
            
            public function set prompt(value:String):void
            {
                if (_prompt == value)
                    return;
                
                _prompt = value;
                invalidate(INVALIDATION_FLAG_DATA);
            }
            
            //----------------------------------
            // allowPromptAsText
            //----------------------------------
            
            public function get allowPromptAsText():Boolean
            {
                return _allowPromptAsText;
            }
            
            public function set allowPromptAsText(value:Boolean):void
            {
                _allowPromptAsText = value;
                invalidate(INVALIDATION_FLAG_DATA);
            }
            
            
            public static function show(title:String, prompt:String, allowPromptAsText:Boolean = false):GetStringDialog
            {
                const dialog:GetStringDialog = Dialog.show(title, GetStringDialog) as GetStringDialog; 
                dialog.prompt = prompt;
                dialog.allowPromptAsText = allowPromptAsText;
                return dialog;
            }
            
            public static function hide(dialog:Dialog):void
            {
                PopUpManager.removePopUp(dialog, true);
            }
            
            override protected function initialize():void
            {
                super.initialize();
                
                isNoEnabled = true;
            }

            override protected function draw():void
            {   
                super.draw();
                
                if (isInvalid(INVALIDATION_FLAG_DATA))
                {
                    textInput.text = _text;
                    textInput.prompt = _prompt;
                    if (_allowPromptAsText && _prompt != null)
                    {
                        isYesEnabled = true;
                    }
                }
            }
            
            private function textInput_changeHandler():void
            {
                _text = textInput.text;
                
                if (!_allowPromptAsText)
                {
                    isYesEnabled = (_text != null && _text != "");
                }
            }
            
        ]]>
    </fx:Script>
    
</dialog:Dialog>
