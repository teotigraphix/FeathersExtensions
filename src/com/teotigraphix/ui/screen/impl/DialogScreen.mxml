<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Michael Schmalle - Teoti Graphix, LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License
//
// Author: Michael Schmalle, Principal Architect
// mschmalle at teotigraphix dot com
////////////////////////////////////////////////////////////////////////////////
-->
<f:Screen xmlns:f="library://ns.feathersui.com/mxml"
          xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:component="com.teotigraphix.ui.component.*">

    <f:layout>
        <f:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
    </f:layout>

    <component:VGroup styleName="{FrameworkStyleNames.DIALOG_SCREEN_CONTENT}">

        <f:Label id="titleLabel"
                 styleName="{FrameworkStyleNames.THEME_FORM_TITLE_DARK}"/>

        <component:HDivider/>

        <component:VGroup id="contentGroup" padding="8" percentWidth="100">

            <!-- content -->

        </component:VGroup>

        <component:HDivider/>

        <component:HGroup styleName="{FrameworkStyleNames.DIALOG_BUTTON_FOOTER}">

            <f:Button id="okButton"
                      label="OK"
                      styleName="{FrameworkStyleNames.FORM_OK_BUTTON}"
                      triggered="okButton_triggeredHandler()"/>
            <f:Button id="cancelButton"
                      label="CANCEL"
                      styleName="{FrameworkStyleNames.FORM_CANCEL_BUTTON}"
                      triggered="cancelButton_triggeredHandler()"/>

        </component:HGroup>

    </component:VGroup>


    <fx:Script><![CDATA[
        import com.teotigraphix.ui.theme.framework.FrameworkStyleNames;

        import starling.display.DisplayObject;

        /**
         * @data {value:*} The text OR prompt is text is empty.
         */
        public static const EVENT_OK:String = "DialogScreen/ok";
        public static const EVENT_CANCEL:String = "DialogScreen/cancel";

        private var _title:String;
        private var _buttonsEnabled:Boolean = true;
        private var _content:starling.display.DisplayObject;

        //----------------------------------
        // content
        //----------------------------------

        public function get content():starling.display.DisplayObject
        {
            return _content;
        }

        public function set content(value:starling.display.DisplayObject):void
        {
            _content = value;
            invalidate("content");
        }

        //----------------------------------
        // title
        //----------------------------------

        public function get title():String
        {
            return _title;
        }

        public function set title(value:String):void
        {
            _title = value;
            invalidate("title");
        }

        //----------------------------------
        // buttonsEnabled
        //----------------------------------

        public function get buttonsEnabled():Boolean
        {
            return _buttonsEnabled;
        }

        public function set buttonsEnabled(value:Boolean):void
        {
            _buttonsEnabled = value;
            invalidate("buttonsEnabled");
        }

        override protected function draw():void
        {
            super.draw();

            if (isInvalid("content"))
            {
                contentGroup.removeChildren();
                contentGroup.addChild(_content);
            }

            if (isInvalid("title"))
            {
                titleLabel.text = _title;
            }

            if (isInvalid("buttonsEnabled"))
            {
                okButton.isEnabled = _buttonsEnabled;
                cancelButton.isEnabled = _buttonsEnabled;
            }
        }

        protected function okButton_triggeredHandler():void
        {
            dispatchEventWith(EVENT_OK);
        }

        protected function cancelButton_triggeredHandler():void
        {
            dispatchEventWith(EVENT_CANCEL);
        }
        ]]></fx:Script>
</f:Screen>